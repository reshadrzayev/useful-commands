{"version":3,"sources":["SearchApp.js","App.js","index.js"],"names":["sortedData","JSONData","slice","sort","a","b","id","Pagination","props","content","pageNumbers","i","Math","ceil","total","cardCount","push","console","log","searched","currentCard","length","setCurrent","map","number","onClick","paginate","className","SearchApp","useState","serachterm","setSearchterm","current","indexOfLastCard","indexOfFirstCard","filter","val","title","toLowerCase","includes","type","placeholder","onChange","e","target","value","key","desc","navigator","clipboard","writeText","pageNumber","searchTerm","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGIA,EAAaC,EAASC,QAAQC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,GAAKF,EAAEE,MAkDpDC,EAAa,SAACC,GAIhB,IAFA,IAsBIC,EAtBEC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAMM,MAAQN,EAAMO,WAAYJ,IAC3DD,EAAYM,KAAKL,GAoBrB,OAjBAM,QAAQC,IAAIV,EAAMW,UAClBF,QAAQC,IAAIV,EAAMY,aAClBH,QAAQC,IAAIR,GACZO,QAAQC,IAAIV,EAAMO,WAEfP,EAAMW,SAASE,OAAST,KAAKC,KAAKL,EAAMM,MAAQN,EAAMO,WACrDN,EAAU,+BAAKG,KAAKC,KAAKL,EAAMW,SAASE,OAAOb,EAAMO,WAA3C,IAAwDP,EAAMc,WAAWV,KAAKC,KAAKL,EAAMW,SAASE,OAAOb,EAAMO,eAErHP,EAAMW,SAASE,OAAS,IAC5BZ,EAAUC,EAAYa,KAAI,SAACC,GACvB,OAAO,oBAAiBC,QAAS,kBAAMjB,EAAMkB,SAASF,IAA/C,SACFA,GADWA,OAQpB,qBAAKG,UAAU,aAAf,SACI,6BAEQlB,OAQLmB,EAtFG,WACd,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAGA,EAA8BF,oBAAS,GAAvC,mBACA,GADA,UAC8BA,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBV,EAAhB,KACA,EAAoBO,mBAAS,GAAtBd,EAAP,oBAEMkB,EAAkBD,EAAUjB,EAC5BmB,EAAmBD,EAAkBlB,EAErCI,EAAUnB,EAAWmC,QAAO,SAACC,GAC/B,MAAmB,KAAfN,GAEOM,EAAIC,MAAMC,cAAcC,SAAST,EAAWQ,eAD5CF,OACJ,KAKLhB,EAAcD,EAASjB,MAAMgC,EAAkBD,GAUrD,OACI,sBAAKN,UAAU,OAAf,UACI,uBAAOa,KAAK,OAAOC,YAAY,sBAAsBC,SAAU,SAACC,GAAQZ,EAAcY,EAAEC,OAAOC,UAC9FzB,EAAYG,KAAI,SAACa,EAAKU,GACnB,OACI,qBAAKnB,UAAU,QAAf,SACI,sBAAKA,UAAU,OAAf,UACI,6BAAKS,EAAIC,QACT,4BAAID,EAAIW,OAFZ,IAEsB,uBAClB,wBAAQtB,QAAS,WAAQuB,UAAUC,UAAUC,UAAUd,EAAIW,OAA3D,uBAJoBD,MASpC,cAAC,EAAD,CAAY3B,SAAUA,EAAUJ,UAAWA,EAAWD,MAAOd,EAAWqB,OAAQK,SAtBvE,SAACyB,GACd7B,EAAW6B,IAqB6F/B,YAAaA,EAAagC,WAAYtB,EAAYR,WAAYA,QCpC/J+B,MARf,WACE,OACE,qBAAK1B,UAAU,MAAf,SACE,cAAC,EAAD,OCFN2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.be279ec3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport JSONData from './MOCK_DATA.json';\r\n\r\nlet sortedData = JSONData.slice().sort((a, b) => b.id - a.id);\r\nconst SearchApp = () => {\r\n    const [serachterm, setSearchterm] = useState('');\r\n\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [current, setCurrent] = useState(1)\r\n    const [cardCount] = useState(4)\r\n\r\n    const indexOfLastCard = current * cardCount;\r\n    const indexOfFirstCard = indexOfLastCard - cardCount;\r\n\r\n    const searched =sortedData.filter((val) => {\r\n        if (serachterm === '') {\r\n            return val\r\n        } else if (val.title.toLowerCase().includes(serachterm.toLowerCase())) {\r\n            return val\r\n        }\r\n    })\r\n\r\n    const currentCard = searched.slice(indexOfFirstCard, indexOfLastCard)\r\n\r\n    const paginate = (pageNumber) => {\r\n        setCurrent(pageNumber)\r\n    }\r\n\r\n    // if(serachterm.length != 0){\r\n    //     setCurrent(1)\r\n    // }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <input type=\"text\" placeholder=\"Search a command...\" onChange={(e) => { setSearchterm(e.target.value) }} />\r\n            {currentCard.map((val, key) => {\r\n                return (\r\n                    <div className=\"cards\" key={key}>\r\n                        <div className='card'>\r\n                            <h3>{val.title}</h3>\r\n                            <p>{val.desc}</p> <br />\r\n                            <button onClick={() => { navigator.clipboard.writeText(val.desc) }}>copy </button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n            <Pagination searched={searched} cardCount={cardCount} total={sortedData.length} paginate={paginate} currentCard={currentCard} searchTerm={serachterm} setCurrent={setCurrent} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(props.total / props.cardCount); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    console.log(props.searched);\r\n    console.log(props.currentCard);\r\n    console.log(pageNumbers);\r\n    console.log(props.cardCount);\r\n\r\n    if(props.searched.length < Math.ceil(props.total / props.cardCount)){\r\n        content = <li>{Math.ceil(props.searched.length/props.cardCount)} {props.setCurrent(Math.ceil(props.searched.length/props.cardCount))}</li>\r\n    }\r\n    else if(props.searched.length > 0){\r\n        content = pageNumbers.map((number) => {\r\n            return <li key={number} onClick={() => props.paginate(number)}>\r\n                {number}\r\n            </li>\r\n        })\r\n    }\r\n\r\n    var content\r\n    return (\r\n        <div className='pagination'>\r\n            <ul>\r\n                {\r\n                    content    \r\n                }\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchApp\r\n","import './App.css';\r\nimport SearchApp from './SearchApp';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SearchApp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}